day11.txt  2018.4.16
1.函数function:
  1.重复执行的语句块,可以重复调用
  2.函数定义语句def:
    1.def 函数名(参数列表):
        语句块(代码块)
  3.函数调用:
    1.函数名(实际调用传递参数)
    2.函数调用是一个表达式
    3.没有return语句时,函数执行完返回None对象
  4.函数外部不能访问函数内的变量
  5.return语句:
    函数中执行return语句后,函数结束 
2.函数的参数传递:
  1.位置传参:fx(1,2,3)
  2.序列传参:用*将序列拆解后再按位置传参
    def fx(a,b,c):
        pass
    fx(*[1,2,3])
  3.关键字传参:按形参的名称给形参赋值
    fx(b=2,a=1,c=3)
  4.字典关键字传参:实参为字典,用**拆解字典再进行关键字传参
    fx(**{'b':2,'a':1,'c':3})
  5.综合传参:
    1.位置和序列先传,其次是关键字和字典
    2.位置参数不能跟在关键字参数后 
3.函数的缺省参数:
  1.def 函数名(形参1=默认实参1,形参1=默认实参1...):
        语句
  2.示例:
    def info(name,age=1,address='what'):
        print('myname:',name,'age:',age,
        'address:',address)
    info('zhangfei',30,'zhongyuan')
    info('tarena',10)
    info('zhaoyun')
  3.非默认参数应在默认参数后
    def info(name,age=1,address)#错误
    def fn(a,lst=[]):
        lst.append(a)
        print(lst)
    l=[1,2,3,4]
    fn(5,l)#[1,2,3,4,5]
    fn(6,l)#[1,2,3,4,5,6]
    fn(1.1)#[1.1]
    fn(2.2)#[1.1,2.2]
    lst存在于函数内不会消失,与其他语言不一样
    默认参数最好指向不变对象
4.形参定义方式:
  1.位置形参
    def 函数名(形参名1,形参名2,....):语句块
  2.星号元组形参
    1.收集多余的位置传参
    2.def 函数名(*元组形参名):语句块       
  3.命名关键字形参
    1.所有的命名关键字形参都强制调用者采用关键字传参或字典关键字传参的方式传递
    2.def 函数名(*,命名关键字形参):语句块
      1.*后的必须关键字传参
      2.def 函数名(*args,命名关键字形参):语句块
  4.双星号字典形参
    1.收集多余的关键字传参
    2.def 函数名(**kwargs):语句块
5.函数参数说明:
  1.位置形参,缺省参数,星号元组形参,双星号字典形参,命名关键字形参可以混合使用
  2.函数参数自左至右顺序:
    1.位置形参
    2.星号元组形参
    3.命名关键字形参
    4.双星号字典形参
  3.可以接受任意位置传参和关键字传参的函数:
    def fn(*args,**kwargs):pass







