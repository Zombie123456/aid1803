day16.txt 2018.4.23

__init__.py文件:
  是常规包内必须存在的文件,__init__.py会在导入包时自动调用
  1.编写此包的内容
  2.在内部添加包的文档字符串
  3.在__init__.py文件内可以加载此包所依赖的其他模块

包的__all__列表:
  用来记录此包内有哪些子包和模块需要导入
  用from package import *语句导入时,只查找__all__中的模块和子包
  __all__列表写在__init__.py中 __all__=['要导入的模块或包名']

子包或子包内的模块被导入时,上一层的包也会被导入,实质是一层一层的导下去

包的相对导入:
  是指包内的模块的相互导入
  from 相对路径包或模块 import *
  . 当前目录  .. 上一级目录 ... 上二级目录 以此类推
  1.相对导入不能超出包的外部
  2.相对导入要避免循环导入
  from mypack.menu import *
  from ..menu import *

异常(基础)exception
  try:
     可能触发异常的语句
  except 错误类型1 [as变量1]:
     异常处理语句1 
  except 错误类型2 [as变量2]:
     异常处理语句2 
  else:
     未发生异常时运行
  finally:
     通常用于发生异常时执行清理工作(无论如何都会执行)

try-finally语句

raise语句

assert语句(断言):
  assert 真值表达式,错误数据(通常是字符串)
  当真值表达式为False时,用错误数据建立一个AssertionError类型的错误,并进入异常状态
  等同于 if 真值表达式 == False:
            raise AssertionError(错误数据)
  assert y<140,'年龄不可能大于140!'
  当输入的年龄>=140时出现AssertionError:年龄不可能大于140!
























