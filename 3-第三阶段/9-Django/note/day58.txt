day58 2018.6.20

1、WEB 与 服务器
  1、WEB ：表示用户可以浏览的网页内容(HTML,CSS,JS)
  2、服务器 
    能够给用户提供服务的机器
    1、硬件 与 软件
      硬件范畴：一台机器
      软件范畴：一个能够接收用户请求并给出相应的程序
        1、APACHE
        2、TOMCAT
        3、IIS
        4、Nginx
    2、作用
      1、存储WEB所需要的信息(HTML,图片,音频,...)
      2、能够处理用户的请求(request),并给出响应(response)
      3、执行服务器端的程序 ：数据库操作
    3、服务器 与 WEB之间的关系
    4、Django 框架
      1、作用
        使用 python 语言开发服务器端处理程序
2、框架
  1、什么是框架
    框架是一个为了解决开放性问题而存在的一种结构。框架本身提供一些最基本的功能。我们只需要在基础功能上搭建属于自己的操作即可。
  2、Python 中的框架
    1、Django ：重量级的 WEB 框架
    2、Tornado ：异步框架
    3、Flask ：轻量级框架
    ... ...
3、Django 框架
  1、什么是Django
    是一个开源框架，2005年发布，采用Python语言开发。早期是做新闻以及内容管理的网站的。提供了非常强大的后台管理系统。
  2、Django 的框架模式 - MTV
    M ：Models 层
      模型层，负责数据库的建模以及CRUD的操作
    T ：Templates 层
      模板层，用于处理用户显示的内容的 如：html
    V ：Views 层
      视图层
      处理与用户交互的部分内容，从模型中获取数据，再将数据发送给模板，显示给用户
    自行了解：MVC
      M ：Models
        模型层，负责数据库的建模以及CRUD的操作
      V ：Views
        视图层 用于处理用户显示的内容
      C ：Controller(控制器)
        处理与用户交互的部分内容,从模型中获取数据,再交给视图层,再显示给用户
    m-m 
    t-v 
    v-c
4、Django 框架的使用
  1、Django的安装
    1、查看已安装的Django版本
      1、进入到终端 以及 Python 的交互模式
        python3 / ipython3
      2、交互模式中 输入 import django
        如果未报错：说明已经安装过
        如果报错：说明未安装
      3、查看已安装的版本
        交互模式中：django.VERSION
    2、安装
      1、在线安装 - 使用 pip / pip3
        sudo pip3 install django
        (默认安装Django的最高版本)
        sudo pip3 install django==1.11.8
        (指定安装1.11.8版本)
      2、离线安装
        1、下载所需要的Django包
        2、在环境中解压 Django 包 
          tar -xvf Django-1.11.8.tar.gz
        3、进入到 Django-1.11.8 
          cd Django-1.11.8
        4、安装
          sudo python3 setup.py install
    Django官网：http://www.djangoproject.com
    Djangobook：http://djangobook.py3k.cn/2.0/
  2、使用 Django
    1、创建Django项目
      mkdir Django -- 创建目录，用于保存项目(可选)
      使用 django-admin 指令，创建Django项目
        django-admin startproject 项目名
    2、启动服务，用于访问
      在创建好的项目中，找到 manage.py 文件
      通过 manage.py启动项目(服务)
      python3 manage.py runserver
    3、访问网站
      启动服务之后，在浏览器中，通过以下网址访问:
      http://localhost:8000
      http://127.0.0.1:8000
  3、Django项目结构介绍
    1、manage.py
      负责执行django中的各项操作的文件
      如：
        启动服务
        创建管理员
        创建应用
        数据库的同步
    2、主文件夹(名称与项目名称相同)
      1、__init__.py
        项目初始化文件，每当服务器启动的时候，都会自动执行
      2、urls.py
        项目的基础url(路由)配置文件
      3、wsgi.py
        应用服务器配置文件，暂时不用
      4、settings.py
        项目的主设置文件:应用，模板，数据库，语言，时区，... ...
        1、BASE_DIR : 获取当前项目的绝对路径
        2、DEBUG : 调试模式
          开发过程：推荐使用 True
          上线运行：必须改为 False
        3、ALLOWED_HOSTS
          设置允许访问本项目的地址列表。
          如果不设置的话，只有本机(localhost/127.0.0.1)能访问。
          推荐写 '*',表示任何地址都可以访问项目(局域网)
          python3 manage.py runserver 0.0.0.0:8888
        4、INSTALLED_APPS
          指定已安装的应用，如果有自定义的应用的话，需要在此注册
        5、MIDDLEWARE:注册中间件
        6、ROOT_URLCONF:指定项目的基础路由配置文件
        7、TEMPLATES:指定模板的信息
        8、DATABASES:指定数据库的信息
        9、LANGUAGE_CODE:指定语言，允许修改为zh-Hans
        10、TIME_ZONE:指定时区，建议改为 Asia/Shanghai
  4、URL的使用
    1、urls.py
      默认在主文件夹中，主路由位置文件，包含所有的地址映射。
      每一个请求到达之后，都会由urls.py中的 urlpatterns 列表中的 url() 进行匹配
      url() 函数匹配上之后，可能将请求转交给其他的 Views(视图) 或 其他的 ulrs.py 去处理
    2、测试
      1、在项目主文件夹中，创建 views.py
        作用：包含所有定义好的视图(处理程序)
















