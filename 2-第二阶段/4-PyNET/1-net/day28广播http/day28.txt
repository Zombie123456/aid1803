day28 2018.5.10

1.tcp 数据传输
  1.发送和接受消息都会先放到缓冲区再处理
  2.recv如果一次没有拿完，那么下次会继续收取没拿完的消息.
  3.当recv阻塞时,如果客户端断开,则recv立即返回空字符串
2.tcp 粘包
  1.粘包是tcp传输特有的现象，因为tcp中数据以数据流的方式传输没有消息边界。如果是发送连续的内容比如文件等则粘包没有影响。如果是每次发送为单独需要处理内容则需要处理粘包
  2.如何处理粘包
    1.每次发送消息结束位置加标志
    2.发送的消息添加结构描述
    3.让消息的发送延迟，使接收端每次都能够有时间接受一个消息
3.UDP 数据报套接字服务器
  1.创建数据报套接字
  2.绑定本地IP和端口
  3.收发消息
    recvfrom(BUFFERSIZE)
    功能 :在udp中接受消息
    参数 :buffersize 表示一次最多可以接收多少字节的消息
    返回值:data:接收到的消息
          addr:表示从哪个客户端接收到的消息
    sendto(data,addr)
    功能:向一个网络终端发送消息
    参数:data 要发送的消息（bytes）
        addr 发送对象的地址
  4.关闭套接字
    import sys  
    sys.argv:将命令行内容收集为一个列表，每个元素是命令行中的一项
    * 命令行传入的内容均为str格式
    * 命令行内容以空格作为分割， 引号可以合成一个整体
4.udp 客户端
  1.创建数据报套接字
  2.消息收发
  3.关闭套接字
  4.recvfrom每次之能接受一个数据包，如果数据包的大小超过recvfrom的设置大小则会出现数据丢失
5.总结 tcp和udp的区别
  1.tcp是有连接的，udp是无连接的
  2.tcp有三次握手四次挥手的过程，udp没有
  3.tcp是以数据流传输数据，会有粘包，udp是数据报的形式没有占粘包
  4.tcp的连接需要消耗一定的资源，相比之下udp资源消耗少
  5.tcp保证数据的可靠性，udp不保证
  6.tcp需要listen  accept  connect ，udp不需要这些操作
  7.消息收发tcp:recv,send,sendall udp:recvfrom,sendto
6.socket模块
  1.s.type套接字类型
  2.conn.getpeername()
    功能:使用accept生成的套接字调用,获取该套接字对应的客户端地址
  3.s.getsockname()
    功能:获取套接字对应的绑定的地址
  4.s.fileno() 
    功能:获取套接字的文件描述符号码
    文件描述符:系统会给进程中的每一个IO操作对象非配一个>=0的正整数作为标号，我们称之为该IO操作的文件描述符。一个进程中所有IO的文件描述符不会重复
  5.s.setsockopt(level，optname，value)
    功能:设置套接字选项  可以增加或改变套接字的功能
    参数:level要定义的选项类型:SOL_SOCKET
        optname根据level确定的子选项
        value根据选项设置的值
    示例:s.setsockopt(SOL_SOCKET,SO_REUSEADDR,1)
          可以立即对使用的端口重新使用
  6.s.getsockopt(level，optname)
    功能：获取相应选项的值
    参数:level  要获取的选项类型         
       optname  每种类型都有具体的选项 根据具体需求选择要获取的选项
   返回值：获取到的值
7.udp应用之广播 (是一端发送，多端接收的模式)
  设置套接字为可以发送接收广播的套接字
  s.setsockopt(SOL_SOCKET,SO_BROADCAST,1)
  udp 数据报套接字
  广播地址 : 172.60.50.255 
  *在网络中如果存在大量的广播会产生广播风暴，占用大量带宽
8.tcp应用之http传输
  1.http协议(超文本传输协议)
    1.网站中网页的传输和数据的传输,也用于基于http协议的编程传输数据
    2.应用层协议,传输层使用TCP连接,简单,灵活,接口使用方便,几乎支持所有的数据类型,无状态的(不记录客户端的登录状态),http1.1版本后持续连接
    3.请求(request)
      1.格式:
        请求行:确定具体的请求类型
        请求头:对请求内容的信息描述
        空行
        请求正文:具体请求参数
      2.请求行:GET    /index.html HTTP/1.1
              请求方法  请求资源     协议版本
        1.请求方法:
          1.GET:获取网络资源
          2.POST:提交一定的附加数据,得到返回结果
          3.HEAD:只获取响应头信息
          4.PUT:获取服务器资源
          5.DELETE:删除服务器资源
          6.TRACE:用于测试
          7.CONNECT:保留方法
          8.OPTIONS:请求获取服务器性能和信息
      3.请求头
      4.请求正文
        1.GET:get参数 &a=1&b=2
        2.POST:post提交的内容
    4.响应(response)
      1.格式:
        响应行:反馈响应的情况
        响应头:对响应的具体描述
        空行
        响应体:具体返回给用户的内容
      2.响应行
        1.格式:http/1.1 200  OK
              协议版本  响应码 信息
          1.响应码
            1xx:提示信息,请求已接受正在处理
            2xx:请求响应成功
            3xx:重定向,完成任务需要其他操作
            4xx:请求资源不存在,客户端错误
            5xx:服务端错误
            200:成功
            401:没有访问权限
            404:资源不存在
            500:服务器发生未知错误
            503:服务器暂时无法执行
      3.响应头
        格式同请求头
      4.响应体
        文件,图片...
  2.网站访问流程  
    1.客户端发起http请求
    2.传输层使用TCP协议建立连接,层层打包将请求内容发给服务器
    3.web服务器接包后解析http请求,交后端应用程序处理
    4.后端应用得到结果,通过web服务器回发给客户端

























