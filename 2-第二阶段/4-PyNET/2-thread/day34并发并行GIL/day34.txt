day34 2018.5.18

1.并发与并行
  1.并发
    1.同时处理多个请求,但是内核采用轮询时间片的方式逐个访问,某一时间点实际只处理一个任务
    2.IO多路复用,协程,循环服务器,单线程
  2.并行
    1.使用多个内核,同时使用多个任务
    2.多进程,多线程
2.threadpool 线程池 第三方模块
3.GIL(全局解释器锁)
  1.python-->支持多线程-->同步和互斥-->加锁-->超级锁-->解释器在同一时刻只能解释一个线程,大量python库为了省事依赖于这种机制-->python多线程效率低
  2.GIL即为从python解释器由于上锁导致同一时刻只能解释一个线程的问题
  3.解决方案:
    1.不使用线程转而使用进程
    2.不使用c作为解释器java,c#都可以做python解释器
  4.IO密集型
    1.程序中进行了大量IO操作,只有少量的CPU操作
    2.在内存中进行了数据的交换的操作都可以认为是IO操作
    3.特点:速度较慢,使用cpu不高           
  5.cpu密集型（计算密集型）：
    1.大量的程序都在进行运算操作
    2.特点:cup占有率高
  6.多线程的工作效率和单线程几乎相近,而多进程要比前两者有明显的效率提升
  7.python线程适用于高用时的IO操作,网路IO,不适合CPU密集型程序
4.设计模式
  1.设计模式代表了一种最佳实践,是被开发人员长期开发总结,用来解决某一类问题的思路方法,这些方法保证了代码的效率也易于理解。
  2.共三种类型23种
  3.生产者消费者模式为例
    1.控制数据资源数量
    2.降低耦合度
5.总结 
  1.进程和线程的区别
  2.会创建使用线程 threading
  3.掌握基本的线程间同步互斥编程方法
  4.知道什么是GIL
  5.了解设计模式的概念














